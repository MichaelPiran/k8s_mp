- name: Run setup_wsl.sh locally
  hosts: localhost
  connection: local
  gather_facts: no
  become: yes
  tasks:
    - name: Execute setup_wsl.sh script
      script: setup_wsl.sh

- name: master-k8s-local
  hosts: master
  gather_facts: true
  become: yes
  become_user: root

- name: worker1-k8s-local
  hosts: worker1
  gather_facts: true
  become: yes
  become_user: root

- hosts: master,worker1
  become: true
  gather_facts: true
  handlers:
  tasks:

  - name: Update apt cache
    command: sudo apt-get update

  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - gpg

  - name: Install containerd and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - containerd

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Comment out swap in /etc/fstab
    replace:
      path: /etc/fstab
      regexp: '^([^#].*\sswap\s.*)$'
      replace: '# \1'

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Create /etc/apt/keyrings folder
    file:
      path: /etc/apt/keyrings
      state: directory
      mode: '0755'

  - name: Download Kubernetes apt key and save as gpg
    ansible.builtin.shell: |
      curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    args:
      creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

  - name: Add Kubernetes apt repository
    ansible.builtin.apt_repository:
      repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
      filename: kubernetes
      state: present

  - name: Update apt cache after adding Kubernetes repo
    ansible.builtin.apt:
      update_cache: yes

  - name: Install kubelet, kubeadm, and kubectl
    ansible.builtin.apt:
      name:
        - kubelet
        - kubeadm
        - kubectl
      state: present
      update_cache: yes

  - name: Hold kubelet, kubeadm, and kubectl at current version
    ansible.builtin.shell: |
      apt-mark hold kubelet kubeadm kubectl

  - name: "Add master-k8s-local in hosts"
    lineinfile:
      path: /etc/hosts
      line: "192.168.56.32 master-k8s-local"
      state: present
      backup: yes

  - name: "Add worker1-k8s-local in hosts"
    lineinfile:
      path: /etc/hosts
      line: "192.168.56.33 worker1-k8s-local"
      state: present
      backup: yes

  - name: Enable and start kubelet service
    ansible.builtin.systemd:
      name: kubelet
      enabled: yes
      state: started

  - name: Crea la directory di configurazione di Containerd
    file:
      path: /etc/containerd
      state: directory
      mode: '0755'

  - name: Crea la directory di configurazione di Containerd
    file:
      path: /etc/containerd
      state: directory
      mode: '0755'

  - name: Genera la configurazione predefinita di Containerd
    command: containerd config default | sudo tee /etc/containerd/config.toml > /dev/null
    args:
      creates: /etc/containerd/config.toml

  - name: Abilita SystemdCgroup in containerd
    ansible.builtin.replace:
      path: /etc/containerd/config.toml
      regexp: 'SystemdCgroup = false'
      replace: 'SystemdCgroup = true'

  - name: Restart containerd
    service:
      name: containerd
      daemon_reload: yes
      state: restarted

  - name: Ensure br_netfilter module is loaded
    become: true
    modprobe:
      name: br_netfilter
      state: present

  - name: Rendi persistente il caricamento di br_netfilter
    copy:
      dest: /etc/modules-load.d/k8s.conf
      content: |
        br_netfilter
      owner: root
      group: root
      mode: '0644'

  - name: Ensure bridge-nf-call-iptables is set to 1
    become: true
    sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: 1
      state: present
      sysctl_set: yes
      reload: yes

  - name: Ensure net.ipv4.ip_forward is set to 1
    become: true
    sysctl:
      name: net.ipv4.ip_forward
      value: 1
      state: present
      sysctl_set: yes
      reload: yes

- name: master-k8s-local
  hosts: master
  gather_facts: true
  become: yes
  become_user: root
  tasks:
  - name: Set kubelet extra args
    lineinfile:
      path: /etc/default/kubelet
      line: 'KUBELET_EXTRA_ARGS=--node-ip=192.168.56.32'
      create: yes

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Restart containerd
    service:
      name: containerd
      daemon_reload: yes
      state: restarted

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="192.168.56.32" --apiserver-cert-extra-sans="192.168.56.32"  --node-name k8s-master-local --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=all

  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:vagrant /home/vagrant/.kube/config

  - name: Copy kube-flannel.yaml with owner and permissions
    ansible.builtin.copy:
      src: "{{ project_path }}/cluster/kube-flannel.yaml"
      dest: /home/vagrant/kube-flannel.yaml
      owner: vagrant
      group: vagrant
      mode: '0644'

  - name: Install Flannel
    become: false
    command: kubectl apply -f kube-flannel.yaml

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    become: false
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

- name: worker1-k8s-local
  hosts: worker1
  gather_facts: false
  become: yes
  become_user: root
  tasks:
  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip=192.168.56.33

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Restart containerd
    service:
      name: containerd
      daemon_reload: yes
      state: restarted

  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to cluster
    become: true
    command: sh /tmp/join-command.sh

  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
      - mkdir -p /home/vagrant/.kube
      - cp -i /etc/kubernetes/kubelet.conf /home/vagrant/.kube/config
      - chown vagrant:vagrant /home/vagrant/.kube/config

- name: master-k8s-local
  hosts: master
  gather_facts: true
  become: yes
  become_user: root
  tasks:

  - name: Add Helm GPG key
    ansible.builtin.shell: |
      curl https://baltocdn.com/helm/signing.asc | gpg --dearmor -o /usr/share/keyrings/helm.gpg
    args:
      creates: /usr/share/keyrings/helm.gpg

  - name: Add Helm apt repository
    ansible.builtin.apt_repository:
      repo: "deb [signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main"
      state: present
      filename: helm-stable-debian

  - name: Update apt cache
    ansible.builtin.apt:
      update_cache: yes

  - name: Install helm
    ansible.builtin.apt:
      name: helm
      state: present

  - name: Add OpenEBS helm repo
    become: false
    command: helm repo add openebs https://openebs.github.io/openebs

  - name: Copy openebs-values.yaml with owner and permissions
    ansible.builtin.copy:
      src: "{{ project_path }}/cluster/openebs-values.yaml"
      dest: /home/vagrant/openebs-values.yaml
      owner: vagrant
      group: vagrant
      mode: '0644'

  - name: Install OpenEBS
    become: false
    command: helm install openebs --namespace openebs openebs/openebs -f /home/vagrant/openebs-values.yaml --create-namespace