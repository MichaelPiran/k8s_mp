- name: k8s-master
  hosts: 192.168.56.32
  gather_facts: true
  become: yes
  become_user: root

  tasks:
  - name: Set a hostname
    ansible.builtin.hostname:
      name: k8s-master

- name: worker1
  hosts: 192.168.56.33
  gather_facts: true
  become: yes
  become_user: root

  tasks:
  - name: Set a hostname
    ansible.builtin.hostname:
      name: worker1

- name: all
  hosts: all
  gather_facts: true
  become: yes
  become_user: root
 
  handlers:
  - name: docker status
    service: name=docker state=started

  # tasks:
  # - name: Create proxy.conf file for APT
  #   copy:
  #     dest: "/etc/apt/apt.conf.d/proxy.conf"
  #     content: |
  #       Acquire::http::proxy "http://192.168.1.107:8080/";

  # - name: Upgrade the OS (apt-get upgrade)
  #   apt:
  #     update_cache: yes
  #     upgrade: full

  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet=1.24.10-00 
        - kubeadm=1.24.10-00  
        - kubectl=1.24.10-00 

  - name: "Add k8s-master in hosts"
    lineinfile:
      path: /etc/hosts
      line: "192.168.56.32 k8s-master"
      state: present
      backup: yes

  - name: "Add worker1 in hosts"
    lineinfile:
      path: /etc/hosts
      line: "192.168.56.33 worker1"
      state: present
      backup: yes

- name: k8s-master
  hosts: 192.168.56.32
  gather_facts: false
  become: yes
  become_user: root
  tasks:
  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip=192.168.56.32
      create: yes

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Remove file /etc/containerd/config.toml
    ansible.builtin.file:
      path: /etc/containerd/config.toml
      state: absent

  - name: Restart containerd
    service:
      name: containerd
      daemon_reload: yes
      state: restarted

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="192.168.56.32" --apiserver-cert-extra-sans="192.168.56.32"  --node-name k8s-master --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=all

  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:vagrant /home/vagrant/.kube/config

  # - name: Install Calico
  #   become: false
  #   command: kubectl apply -f https://docs.projectcalico.org/v3.21/manifests/calico.yaml
  - name: Install Flannel
    become: false
    command: kubectl apply -f kube-flannel.yaml

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

- name: worker1
  hosts: 192.168.56.33
  gather_facts: false
  become: yes
  become_user: root
  tasks:
  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip=192.168.56.33
      create: yes

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Remove file /etc/containerd/config.toml
    ansible.builtin.file:
      path: /etc/containerd/config.toml
      state: absent

  - name: Restart containerd
    service:
      name: containerd
      daemon_reload: yes
      state: restarted

  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh

  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
      - mkdir -p /home/vagrant/.kube
      - cp -i /etc/kubernetes/kubelet.conf /home/vagrant/.kube/config
      - chown vagrant:vagrant /home/vagrant/.kube/config

# - name: k8s-master
#   hosts: 192.168.56.32
#   gather_facts: false
#   become: yes
#   become_user: root
#   tasks:

#   - name: Install OpenEBS
#     become: false
#     command: kubectl apply -f /home/vagrant/openebs-operator.yaml

#   - name: Install MetalLB
#     become: false
#     command: kubectl apply -f metallb-native.yaml

#   - name: Pause for 2 minutes to let metallb-native deploy
#     ansible.builtin.pause:
#       minutes: 2

#   - name: Install MetalLB Resources
#     become: false
#     command: kubectl apply -f /home/vagrant/metallb.yaml